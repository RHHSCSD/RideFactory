/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.ridefactory;

import apphelper.Sound;
import apphelper.Sprite;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.Graphics;
import java.awt.GraphicsEnvironment;
import java.io.File;
import java.io.IOException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author amirb
 */
public class PartsPanel extends javax.swing.JPanel {
    
    //Create background sprite
    Sprite theBackground = new Sprite(0, 0, "images/Background.png", 1920, 1080);
    
    //Create car sprite
    Sprite car = new Sprite(55, 294, "images/3SeriesSideProfile.png", 799, 599);
    
    //Create button sprite
    Sprite factoryButton = new Sprite(70, 803, "images/Factory.png", 342, 127);
    Sprite designPressedButton = new Sprite(511, 803, "images/DesignPressed.png", 342, 127);
    
    //Font
    Font customFont3;
    
    //For sharing information
    InformationStored in;
    
    /**
     * Creates new form PartsPanel
     */
    public PartsPanel(InformationStored infor) {
        initComponents();
        //Set preferred size of panel
        setPreferredSize(new Dimension(1920, 1080));
        //Set up inof model;
        in = infor;
        
        //Make factory button invisible so that image of button can be seen
        jButton13.setOpaque(false);
        jButton13.setContentAreaFilled(false);
        jButton13.setBorderPainted(false);
        
        //Implementing font. Code adapted from https://stackoverflow.com/questions/5652344/how-can-i-use-a-custom-font-in-java
        final GraphicsEnvironment GE = GraphicsEnvironment.getLocalGraphicsEnvironment();
        try {
            final File fontFile = new File("fonts/Anonymous Pro B.ttf");
            customFont3 = Font.createFont(Font.TRUETYPE_FONT, fontFile);
            GE.registerFont(customFont3);
        } catch (FontFormatException | IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        //The code below sets the buttons and label font to the custom font with custom size
        if (customFont3 != null) {
            jLabel1.setFont(customFont3.deriveFont(Font.PLAIN, 54));
            jLabel2.setFont(customFont3.deriveFont(Font.PLAIN, 30));
            jLabel3.setFont(customFont3.deriveFont(Font.PLAIN, 30));
            jLabel4.setFont(customFont3.deriveFont(Font.PLAIN, 30));
            jLabel5.setFont(customFont3.deriveFont(Font.PLAIN, 30));
            jLabel6.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jLabel7.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jLabel8.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jLabel9.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            
            jButton1.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jButton2.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jButton3.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jButton4.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jButton5.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jButton6.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jButton7.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jButton8.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jButton9.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jButton10.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jButton11.setFont(customFont3.deriveFont(Font.PLAIN, 35));
            jButton12.setFont(customFont3.deriveFont(Font.PLAIN, 35));
        } else {
            System.err.println("Custom font is null. Unable to set font.");
        }
    }
    
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        //Draws the background
        theBackground.draw(g);
        //Draws the car
        car.draw(g);
        //Draws the buttons
        factoryButton.draw(g);
        designPressedButton.draw(g);
    }
    
    //Returns the label that shows cash the player has so that 
    //it can show that data on this screen
    public JLabel getCashLabel() {
        return jLabel1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(1920, 1080));
        setPreferredSize(new java.awt.Dimension(1920, 1080));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(1, 132, 69));
        jLabel1.setText("$0");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 112, -1, -1));

        jLabel2.setText("Economy: +5% Cost-Cutting");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 202, -1, -1));

        jLabel3.setText("Sport: +5% Engineering");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 255, -1, -1));

        jLabel4.setText("Big: +5% Markup");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 308, -1, -1));

        jLabel5.setText("Superclass (4 Matching) Bonus: +5%");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 361, -1, -1));

        jLabel6.setText("Wheels: $1 000");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 112, -1, -1));

        jLabel7.setText("Body: $1 000 000");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 325, -1, -1));

        jLabel8.setText("Suspension: $100 000 000");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 540, -1, -1));

        jLabel9.setText("Engine: $1 000 000 000");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 752, -1, -1));

        jButton1.setBackground(new java.awt.Color(241, 240, 236));
        jButton1.setText("Economy");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton1.setPreferredSize(new java.awt.Dimension(282, 107));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 186, -1, -1));

        jButton2.setBackground(new java.awt.Color(241, 240, 236));
        jButton2.setText("Sport");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton2.setPreferredSize(new java.awt.Dimension(282, 107));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1282, 186, -1, -1));

        jButton3.setBackground(new java.awt.Color(241, 240, 236));
        jButton3.setText("Big");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton3.setPreferredSize(new java.awt.Dimension(282, 107));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1603, 186, -1, -1));

        jButton4.setBackground(new java.awt.Color(241, 240, 236));
        jButton4.setText("Economy");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton4.setPreferredSize(new java.awt.Dimension(282, 107));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 398, -1, -1));

        jButton5.setBackground(new java.awt.Color(241, 240, 236));
        jButton5.setText("Sport");
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton5.setPreferredSize(new java.awt.Dimension(282, 107));
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1282, 398, -1, -1));

        jButton6.setBackground(new java.awt.Color(241, 240, 236));
        jButton6.setText("Big");
        jButton6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton6.setPreferredSize(new java.awt.Dimension(282, 107));
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1603, 398, -1, -1));

        jButton7.setBackground(new java.awt.Color(241, 240, 236));
        jButton7.setText("Economy");
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton7.setPreferredSize(new java.awt.Dimension(282, 107));
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });
        add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 614, -1, -1));

        jButton8.setBackground(new java.awt.Color(241, 240, 236));
        jButton8.setText("Sport");
        jButton8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton8.setPreferredSize(new java.awt.Dimension(282, 107));
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });
        add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1282, 614, -1, -1));

        jButton9.setBackground(new java.awt.Color(241, 240, 236));
        jButton9.setText("Big");
        jButton9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton9.setPreferredSize(new java.awt.Dimension(282, 107));
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });
        add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1603, 614, -1, -1));

        jButton10.setBackground(new java.awt.Color(241, 240, 236));
        jButton10.setText("Economy");
        jButton10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton10.setPreferredSize(new java.awt.Dimension(282, 107));
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });
        add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 826, -1, -1));

        jButton11.setBackground(new java.awt.Color(241, 240, 236));
        jButton11.setText("Sport");
        jButton11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton11.setPreferredSize(new java.awt.Dimension(282, 107));
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });
        add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1282, 826, -1, -1));

        jButton12.setBackground(new java.awt.Color(241, 240, 236));
        jButton12.setText("Big");
        jButton12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jButton12.setPreferredSize(new java.awt.Dimension(282, 107));
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
        });
        add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1603, 826, -1, -1));

        jButton13.setPreferredSize(new java.awt.Dimension(342, 127));
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton13MouseClicked(evt);
            }
        });
        add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 803, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
    //If facotry button is pressed, take user back to game panel
    private void jButton13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MouseClicked
        //Set cash label on game panel
        JLabel cashLabelGamePanel = in.gamePanel.getCashLabel();
        cashLabelGamePanel.setText("$" + in.cash.getCash());
        //Switch to gamePanel
        CardLayout cl = (CardLayout) in.mainPanel.getLayout();
        cl.show(in.mainPanel, "game");
    }//GEN-LAST:event_jButton13MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        //If player has enough cash for upgrade and isn't buying the same upgrade again
        if (in.cash.getCash() >= 1000 && in.wheels.getType() == 0) {
            //Grey out button showing that it has been purchased
            jButton1.setBackground(Color.GRAY);
            //Subtract cost of part
            in.cash.subtractCash(1000);
            //Set wheel type to economy and boost cost cutting
            in.wheels.setType(1);
            in.costCutting.effectivenessUp(5);
            //Load upgrade sound effect
            Sound upgradeSound = new Sound("audio/upgradeSound.wav");
            //Play sound effect for ugprade
            upgradeSound.start();
            
            //This count the amount of economy parts the player has
            int boostCounter = 0;
            for (Parts p: in.parts) {
                if (p.getType() == 1) {
                    boostCounter += 1;
                }
            }
            
            //If player has all economy parts, apply 5% extra boost
            if (boostCounter == 4) {
                in.costCutting.effectivenessUp(5);
            }
            
            //Update cash label
            jLabel1.setText("$" + in.cash.getCash());
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        //If player has enough cash for upgrade and isn't buying the same upgrade again
        if (in.cash.getCash() >= 1000 && in.wheels.getType() == 0) {
            //Grey out button showing that it has been purchased
            jButton2.setBackground(Color.GRAY);
            //Subtract cost of part
            in.cash.subtractCash(1000);
            //Set wheel type to sport and boost engineering
            in.wheels.setType(2);
            in.engineering.effectivenessUp(5);
            //Load upgrade sound effect
            Sound upgradeSound = new Sound("audio/upgradeSound.wav");
            //Play sound effect for ugprade
            upgradeSound.start();
            
            //This count the amount of sport parts the player has
            int boostCounter = 0;
            for (Parts p: in.parts) {
                if (p.getType() == 2) {
                    boostCounter += 1;
                }
            }
            
            //If player has all sport parts, apply 5% extra boost
            if (boostCounter == 4) {
                in.engineering.effectivenessUp(5);
            }
            
            //Update cash label
            jLabel1.setText("$" + in.cash.getCash());
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        //If player has enough cash for upgrade and isn't buying the same upgrade again
        if (in.cash.getCash() >= 1000 && in.wheels.getType() == 0) {
            //Grey out button showing that it has been purchased
            jButton3.setBackground(Color.GRAY);
            //Subtract cost of part
            in.cash.subtractCash(1000);
            //Set wheel type to big and boost markup
            in.wheels.setType(3);
            in.markup.effectivenessUp(5);
            //Load upgrade sound effect
            Sound upgradeSound = new Sound("audio/upgradeSound.wav");
            //Play sound effect for ugprade
            upgradeSound.start();
            
            //This count the amount of big parts the player has
            int boostCounter = 0;
            for (Parts p: in.parts) {
                if (p.getType() == 2) {
                    boostCounter += 1;
                }
            }
            
            //If player has all big parts, apply 5% extra boost
            if (boostCounter == 4) {
                in.engineering.effectivenessUp(5);
            }
            
            //Update cash label
            jLabel1.setText("$" + in.cash.getCash());
        }
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        //If player has enough cash for upgrade and isn't buying the same upgrade again
        if (in.cash.getCash() >= 1000000 && in.body.getType() == 0) {
            //Grey out button showing that it has been purchased
            jButton4.setBackground(Color.GRAY);
            //Subtract cost of part
            in.cash.subtractCash(1000000);
            //Set body type to economy and boost cost cutting
            in.body.setType(1);
            in.costCutting.effectivenessUp(5);
            //Load upgrade sound effect
            Sound upgradeSound = new Sound("audio/upgradeSound.wav");
            //Play sound effect for ugprade
            upgradeSound.start();
            
            //This count the amount of economy parts the player has
            int boostCounter = 0;
            for (Parts p: in.parts) {
                if (p.getType() == 1) {
                    boostCounter += 1;
                }
            }
            
            //If player has all economy parts, apply 5% extra boost
            if (boostCounter == 4) {
                in.costCutting.effectivenessUp(5);
            }
            
            //Update cash label
            jLabel1.setText("$" + in.cash.getCash());
        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        //If player has enough cash for upgrade and isn't buying the same upgrade again
        if (in.cash.getCash() >= 1000000 && in.body.getType() == 0) {
            //Grey out button showing that it has been purchased
            jButton5.setBackground(Color.GRAY);
            //Subtract cost of part
            in.cash.subtractCash(1000000);
            //Set body type to sport and boost engineering
            in.body.setType(2);
            in.engineering.effectivenessUp(5);
            //Load upgrade sound effect
            Sound upgradeSound = new Sound("audio/upgradeSound.wav");
            //Play sound effect for ugprade
            upgradeSound.start();
            
            //This count the amount of sport parts the player has
            int boostCounter = 0;
            for (Parts p: in.parts) {
                if (p.getType() == 2) {
                    boostCounter += 1;
                }
            }
            
            //If player has all sport parts, apply 5% extra boost
            if (boostCounter == 4) {
                in.engineering.effectivenessUp(5);
            }
            
            //Update cash label
            jLabel1.setText("$" + in.cash.getCash());
        }
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        //If player has enough cash for upgrade and isn't buying the same upgrade again
        if (in.cash.getCash() >= 1000000 && in.body.getType() == 0) {
            //Grey out button showing that it has been purchased
            jButton6.setBackground(Color.GRAY);
            //Subtract cost of part
            in.cash.subtractCash(1000000);
            //Set body type to big and boost markup
            in.body.setType(3);
            in.markup.effectivenessUp(5);
            //Load upgrade sound effect
            Sound upgradeSound = new Sound("audio/upgradeSound.wav");
            //Play sound effect for ugprade
            upgradeSound.start();
            
            //This count the amount of big parts the player has
            int boostCounter = 0;
            for (Parts p: in.parts) {
                if (p.getType() == 2) {
                    boostCounter += 1;
                }
            }
            
            //If player has all big parts, apply 5% extra boost
            if (boostCounter == 4) {
                in.engineering.effectivenessUp(5);
            }
            
            //Update cash label
            jLabel1.setText("$" + in.cash.getCash());
        }
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        //If player has enough cash for upgrade and isn't buying the same upgrade again
        if (in.cash.getCash() >= 100000000 && in.suspension.getType() == 0) {
            //Grey out button showing that it has been purchased
            jButton7.setBackground(Color.GRAY);
            //Subtract cost of part
            in.cash.subtractCash(100000000);
            //Set suspention type to economy and boost cost cutting
            in.suspension.setType(1);
            in.costCutting.effectivenessUp(5);
            //Load upgrade sound effect
            Sound upgradeSound = new Sound("audio/upgradeSound.wav");
            //Play sound effect for ugprade
            upgradeSound.start();
            
            //This count the amount of economy parts the player has
            int boostCounter = 0;
            for (Parts p: in.parts) {
                if (p.getType() == 1) {
                    boostCounter += 1;
                }
            }
            
            //If player has all economy parts, apply 5% extra boost
            if (boostCounter == 4) {
                in.costCutting.effectivenessUp(5);
            }
            
            //Update cash label
            jLabel1.setText("$" + in.cash.getCash());
        }
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        //If player has enough cash for upgrade and isn't buying the same upgrade again
        if (in.cash.getCash() >= 100000000 && in.suspension.getType() == 0) {
            //Grey out button showing that it has been purchased
            jButton8.setBackground(Color.GRAY);
            //Subtract cost of part
            in.cash.subtractCash(100000000);
            //Set suspension type to sport and boost engineering
            in.suspension.setType(2);
            in.engineering.effectivenessUp(5);
            //Load upgrade sound effect
            Sound upgradeSound = new Sound("audio/upgradeSound.wav");
            //Play sound effect for ugprade
            upgradeSound.start();
            
            //This count the amount of sport parts the player has
            int boostCounter = 0;
            for (Parts p: in.parts) {
                if (p.getType() == 2) {
                    boostCounter += 1;
                }
            }
            
            //If player has all sport parts, apply 5% extra boost
            if (boostCounter == 4) {
                in.engineering.effectivenessUp(5);
            }
            
            //Update cash label
            jLabel1.setText("$" + in.cash.getCash());
        }
    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        //If player has enough cash for upgrade and isn't buying the same upgrade again
        if (in.cash.getCash() >= 100000000 && in.suspension.getType() == 0) {
            //Grey out button showing that it has been purchased
            jButton9.setBackground(Color.GRAY);
            //Subtract cost of part
            in.cash.subtractCash(100000000);
            //Set suspension type to big and boost markup
            in.suspension.setType(3);
            in.markup.effectivenessUp(5);
            //Load upgrade sound effect
            Sound upgradeSound = new Sound("audio/upgradeSound.wav");
            //Play sound effect for ugprade
            upgradeSound.start();
            
            //This count the amount of big parts the player has
            int boostCounter = 0;
            for (Parts p: in.parts) {
                if (p.getType() == 2) {
                    boostCounter += 1;
                }
            }
            
            //If player has all big parts, apply 5% extra boost
            if (boostCounter == 4) {
                in.engineering.effectivenessUp(5);
            }
            
            //Update cash label
            jLabel1.setText("$" + in.cash.getCash());
        }
    }//GEN-LAST:event_jButton9MouseClicked

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
        //If player has enough cash for upgrade and isn't buying the same upgrade again
        if (in.cash.getCash() >= 1000000000 && in.engine.getType() == 0) {
            //Grey out button showing that it has been purchased
            jButton10.setBackground(Color.GRAY);
            //Subtract cost of part
            in.cash.subtractCash(1000000000);
            //Set engine type to economy and boost cost cutting
            in.engine.setType(1);
            in.costCutting.effectivenessUp(5);
            //Load upgrade sound effect
            Sound upgradeSound = new Sound("audio/upgradeSound.wav");
            //Play sound effect for ugprade
            upgradeSound.start();
            
            //This count the amount of economy parts the player has
            int boostCounter = 0;
            for (Parts p: in.parts) {
                if (p.getType() == 1) {
                    boostCounter += 1;
                }
            }
            
            //If player has all economy parts, apply 5% extra boost
            if (boostCounter == 4) {
                in.costCutting.effectivenessUp(5);
            }
            
            //Update cash label
            jLabel1.setText("$" + in.cash.getCash());
        }
    }//GEN-LAST:event_jButton10MouseClicked

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        //If player has enough cash for upgrade and isn't buying the same upgrade again
        if (in.cash.getCash() >= 1000000000 && in.engine.getType() == 0) {
            //Grey out button showing that it has been purchased
            jButton11.setBackground(Color.GRAY);
            //Subtract cost of part
            in.cash.subtractCash(1000000000);
            //Set engine type to sport and boost engineering
            in.engine.setType(2);
            in.engineering.effectivenessUp(5);
            //Load upgrade sound effect
            Sound upgradeSound = new Sound("audio/upgradeSound.wav");
            //Play sound effect for ugprade
            upgradeSound.start();
            
            //This count the amount of sport parts the player has
            int boostCounter = 0;
            for (Parts p: in.parts) {
                if (p.getType() == 2) {
                    boostCounter += 1;
                }
            }
            
            //If player has all sport parts, apply 5% extra boost
            if (boostCounter == 4) {
                in.engineering.effectivenessUp(5);
            }
            
            //Update cash label
            jLabel1.setText("$" + in.cash.getCash());
        }
    }//GEN-LAST:event_jButton11MouseClicked

    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseClicked
        //If player has enough cash for upgrade and isn't buying the same upgrade again
        if (in.cash.getCash() >= 1000000000 && in.engine.getType() == 0) {
            //Grey out button showing that it has been purchased
            jButton12.setBackground(Color.GRAY);
            //Subtract cost of part
            in.cash.subtractCash(1000000000);
            //Set engine type to big and boost markup
            in.engine.setType(3);
            in.markup.effectivenessUp(5);
            //Load upgrade sound effect
            Sound upgradeSound = new Sound("audio/upgradeSound.wav");
            //Play sound effect for ugprade
            upgradeSound.start();
            
            //This count the amount of big parts the player has
            int boostCounter = 0;
            for (Parts p: in.parts) {
                if (p.getType() == 2) {
                    boostCounter += 1;
                }
            }
            
            //If player has all big parts, apply 5% extra boost
            if (boostCounter == 4) {
                in.engineering.effectivenessUp(5);
            }
            
            //Update cash label
            jLabel1.setText("$" + in.cash.getCash());
        }
    }//GEN-LAST:event_jButton12MouseClicked

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
